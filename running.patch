From 4505d61c513e500d77dfdd56c1e1dafa62a1296e Mon Sep 17 00:00:00 2001
From: Mimus <mimus.angel@gmail.com>
Date: Wed, 1 Apr 2020 19:59:01 +0200
Subject: [PATCH] System for Run

---
 .../Network/Packets/Client/MovePacket.cs       |  9 ++++++---
 .../Network/Packets/Server/EntityMovePacket.cs | 12 ++++++++----
 .../Packets/Server/EntityPositionPacket.cs     | 10 +++++++---
 Intersect.Client/Core/Controls/ControlEnum.cs  |  4 +++-
 Intersect.Client/Core/Controls/Controls.cs     |  5 +++--
 Intersect.Client/Entities/Entity.cs            | 12 +++++++++---
 Intersect.Client/Entities/Player.cs            | 18 +++++++++++++++---
 Intersect.Client/Localization/Strings.cs       |  5 +++--
 Intersect.Client/Networking/PacketHandler.cs   |  4 +++-
 Intersect.Client/Networking/PacketSender.cs    |  2 +-
 Intersect.Server/Entities/Entity.cs            |  9 ++++++++-
 Intersect.Server/Entities/Player.cs            |  8 ++++----
 Intersect.Server/Networking/PacketHandler.cs   |  1 +
 Intersect.Server/Networking/PacketSender.cs    |  8 ++++----
 14 files changed, 75 insertions(+), 32 deletions(-)

diff --git a/Intersect (Core)/Network/Packets/Client/MovePacket.cs b/Intersect (Core)/Network/Packets/Client/MovePacket.cs
index f4c3a02e..5d3b1cc4 100644
--- a/Intersect (Core)/Network/Packets/Client/MovePacket.cs	
+++ b/Intersect (Core)/Network/Packets/Client/MovePacket.cs	
@@ -6,12 +6,13 @@ namespace Intersect.Network.Packets.Client
     public class MovePacket : CerasPacket
     {
 
-        public MovePacket(Guid mapId, byte x, byte y, byte dir)
+        public MovePacket(Guid mapId, byte x, byte y, byte dir, byte run)
         {
             MapId = mapId;
             X = x;
             Y = y;
             Dir = dir;
+			Run = run;
         }
 
         public Guid MapId { get; set; }
@@ -20,8 +21,10 @@ public MovePacket(Guid mapId, byte x, byte y, byte dir)
 
         public byte Y { get; set; }
 
-        public byte Dir { get; set; }
+		public byte Dir { get; set; }
 
-    }
+		public byte Run { get; set; }
+
+	}
 
 }
diff --git a/Intersect (Core)/Network/Packets/Server/EntityMovePacket.cs b/Intersect (Core)/Network/Packets/Server/EntityMovePacket.cs
index 26a1f574..41513cdc 100644
--- a/Intersect (Core)/Network/Packets/Server/EntityMovePacket.cs	
+++ b/Intersect (Core)/Network/Packets/Server/EntityMovePacket.cs	
@@ -8,7 +8,7 @@ namespace Intersect.Network.Packets.Server
     public class EntityMovePacket : CerasPacket
     {
 
-        public EntityMovePacket(Guid id, EntityTypes type, Guid mapId, byte x, byte y, byte dir, bool correction)
+        public EntityMovePacket(Guid id, EntityTypes type, Guid mapId, byte x, byte y, byte dir, bool correction, byte run)
         {
             Id = id;
             Type = type;
@@ -17,7 +17,9 @@ public EntityMovePacket(Guid id, EntityTypes type, Guid mapId, byte x, byte y, b
             Y = y;
             Direction = dir;
             Correction = correction;
-        }
+			Run = run;
+
+		}
 
         public Guid Id { get; set; }
 
@@ -31,8 +33,10 @@ public EntityMovePacket(Guid id, EntityTypes type, Guid mapId, byte x, byte y, b
 
         public byte Direction { get; set; }
 
-        public bool Correction { get; set; }
+		public bool Correction { get; set; }
+
+		public byte Run { get; set; }
 
-    }
+	}
 
 }
diff --git a/Intersect (Core)/Network/Packets/Server/EntityPositionPacket.cs b/Intersect (Core)/Network/Packets/Server/EntityPositionPacket.cs
index 9ec0650a..083ae7cd 100644
--- a/Intersect (Core)/Network/Packets/Server/EntityPositionPacket.cs	
+++ b/Intersect (Core)/Network/Packets/Server/EntityPositionPacket.cs	
@@ -16,7 +16,8 @@ public class EntityPositionPacket : CerasPacket
             byte y,
             byte direction,
             bool passable,
-            bool hideName
+            bool hideName,
+			byte run
         )
         {
             Id = id;
@@ -27,6 +28,7 @@ bool hideName
             Direction = direction;
             Passable = passable;
             HideName = hideName;
+			Run = run;
         }
 
         public Guid Id { get; set; }
@@ -43,8 +45,10 @@ bool hideName
 
         public bool Passable { get; set; }
 
-        public bool HideName { get; set; }
+		public bool HideName { get; set; }
 
-    }
+		public byte Run { get; set; }
+
+	}
 
 }
diff --git a/Intersect.Client/Core/Controls/ControlEnum.cs b/Intersect.Client/Core/Controls/ControlEnum.cs
index 6e5a7012..f3e764cb 100644
--- a/Intersect.Client/Core/Controls/ControlEnum.cs
+++ b/Intersect.Client/Core/Controls/ControlEnum.cs
@@ -64,7 +64,9 @@ public enum Control
 
         OpenAdminPanel,
 
-        ToggleGui
+        ToggleGui,
+
+		Running
 
     }
 
diff --git a/Intersect.Client/Core/Controls/Controls.cs b/Intersect.Client/Core/Controls/Controls.cs
index 0f7de954..c86c33db 100644
--- a/Intersect.Client/Core/Controls/Controls.cs
+++ b/Intersect.Client/Core/Controls/Controls.cs
@@ -86,8 +86,9 @@ public void ResetDefaults()
             CreateControlMap(Control.OpenSettings, Keys.None, Keys.None);
             CreateControlMap(Control.OpenDebugger, Keys.F2, Keys.None);
             CreateControlMap(Control.OpenAdminPanel, Keys.Insert, Keys.None);
-            CreateControlMap(Control.ToggleGui, Keys.F11, Keys.None);
-        }
+			CreateControlMap(Control.ToggleGui, Keys.F11, Keys.None);
+			CreateControlMap(Control.Running, Keys.Shift, Keys.None);
+		}
 
         public void Save()
         {
diff --git a/Intersect.Client/Entities/Entity.cs b/Intersect.Client/Entities/Entity.cs
index de0f4902..3512c2bd 100644
--- a/Intersect.Client/Entities/Entity.cs
+++ b/Intersect.Client/Entities/Entity.cs
@@ -163,7 +163,10 @@ public enum LabelType
 
         public byte Z;
 
-        public Entity(Guid id, EntityPacket packet, bool isEvent = false)
+		// Running System
+		public byte Running = 0;
+
+		public Entity(Guid id, EntityPacket packet, bool isEvent = false)
         {
             Id = id;
             CurrentMap = Guid.Empty;
@@ -419,11 +422,14 @@ public virtual void Dispose()
         public virtual float GetMovementTime()
         {
             var time = 1000f / (float) (1 + Math.Log(Stat[(int) Stats.Speed]));
-            if (Blocking)
+			if (Running == 1)
+			{
+				time *= 0.5f;
+			}
+			if (Blocking)
             {
                 time += time * (float) Options.BlockingSlow;
             }
-
             return Math.Min(1000f, time);
         }
 
diff --git a/Intersect.Client/Entities/Player.cs b/Intersect.Client/Entities/Player.cs
index 4620cea9..212167ec 100644
--- a/Intersect.Client/Entities/Player.cs
+++ b/Intersect.Client/Entities/Player.cs
@@ -57,7 +57,7 @@ public class Player : Entity
         public Guid TargetIndex;
 
         public int TargetType;
-
+		
         public Player(Guid id, PlayerEntityPacket packet) : base(id, packet)
         {
             for (var i = 0; i < Options.MaxHotbar; i++)
@@ -808,7 +808,17 @@ private void HandleInput()
                 movex = 1;
             }
 
-            Globals.Me.MoveDir = -1;
+			if (Controls.KeyDown(Control.Running))
+			{
+				Running = 1;
+			}
+			else
+			{
+				Running = 0;
+			}
+
+
+			Globals.Me.MoveDir = -1;
             if (movex != 0f || movey != 0f)
             {
                 if (movey < 0)
@@ -1867,7 +1877,7 @@ public void DrawTargets()
             }
         }
 
-    }
+	}
 
     public class FriendInstance
     {
@@ -1896,4 +1906,6 @@ public void Load(string data)
 
     }
 
+	
+
 }
diff --git a/Intersect.Client/Localization/Strings.cs b/Intersect.Client/Localization/Strings.cs
index 466cfc68..bf10b64e 100644
--- a/Intersect.Client/Localization/Strings.cs
+++ b/Intersect.Client/Localization/Strings.cs
@@ -553,8 +553,9 @@ public struct Controls
                 {"opensettings", @"Open Settings:"},
                 {"opendebugger", @"Open Debugger:"},
                 {"openadminpanel", @"Open Admin Panel:"},
-                {"togglegui", @"Toggle Interface:"}
-            };
+				{"togglegui", @"Toggle Interface:"},
+				{"running", @"Running:"}
+			};
 
             public static LocalizedString edit = @"Edit Controls";
 
diff --git a/Intersect.Client/Networking/PacketHandler.cs b/Intersect.Client/Networking/PacketHandler.cs
index c69ec70d..3df17d3b 100644
--- a/Intersect.Client/Networking/PacketHandler.cs
+++ b/Intersect.Client/Networking/PacketHandler.cs
@@ -307,6 +307,7 @@ private static void HandlePacket(EntityPositionPacket packet)
             en.Dir = packet.Direction;
             en.Passable = packet.Passable;
             en.HideName = packet.HideName;
+			en.Running = packet.Run;
         }
 
         //EntityLeftPacket
@@ -440,7 +441,8 @@ private static void HandlePacket(EntityMovePacket packet)
             var y = packet.Y;
             var dir = packet.Direction;
             var correction = packet.Correction;
-            if ((en.CurrentMap != map || en.X != x || en.Y != y) &&
+			en.Running = packet.Run;
+			if ((en.CurrentMap != map || en.X != x || en.Y != y) &&
                 (en != Globals.Me || en == Globals.Me && correction) &&
                 en.Dashing == null)
             {
diff --git a/Intersect.Client/Networking/PacketSender.cs b/Intersect.Client/Networking/PacketSender.cs
index 41082f45..791d806e 100644
--- a/Intersect.Client/Networking/PacketSender.cs
+++ b/Intersect.Client/Networking/PacketSender.cs
@@ -43,7 +43,7 @@ public static void SendNeedMap(Guid mapId)
 
         public static void SendMove()
         {
-            Network.SendPacket(new MovePacket(Globals.Me.CurrentMap, Globals.Me.X, Globals.Me.Y, Globals.Me.Dir));
+            Network.SendPacket(new MovePacket(Globals.Me.CurrentMap, Globals.Me.X, Globals.Me.Y, Globals.Me.Dir, Globals.Me.Running));
         }
 
         public static void SendChatMsg(string msg, byte channel)
diff --git a/Intersect.Server/Entities/Entity.cs b/Intersect.Server/Entities/Entity.cs
index 5bd4fa8e..9c069b66 100644
--- a/Intersect.Server/Entities/Entity.cs
+++ b/Intersect.Server/Entities/Entity.cs
@@ -38,7 +38,10 @@ public partial class Entity : IDisposable
 
         [NotMapped, JsonIgnore] public Entity Target = null;
 
-        public Entity() : this(Guid.NewGuid())
+
+		[NotMapped, JsonIgnore] public byte Running = 0;
+
+		public Entity() : this(Guid.NewGuid())
         {
         }
 
@@ -701,6 +704,10 @@ public virtual bool IsPassable()
         public virtual float GetMovementTime()
         {
             var time = 1000f / (float) (1 + Math.Log(Stat[(int) Stats.Speed].Value()));
+			if (Running == 1)
+			{
+				time *= 0.5f;
+			}
             if (Blocking)
             {
                 time += time * Options.BlockingSlow;
diff --git a/Intersect.Server/Entities/Player.cs b/Intersect.Server/Entities/Player.cs
index f3289df3..bf430c0b 100644
--- a/Intersect.Server/Entities/Player.cs
+++ b/Intersect.Server/Entities/Player.cs
@@ -75,7 +75,7 @@ public partial class Player : Entity
 
         public int StatPoints { get; set; }
 
-        [Column("Equipment"), JsonIgnore]
+		[Column("Equipment"), JsonIgnore]
         public string EquipmentJson
         {
             get => DatabaseUtils.SaveIntArray(Equipment, Options.EquipmentSlots.Count);
@@ -5220,11 +5220,11 @@ public void HandleEventCollision(Event evt, int pageNum)
             }
         }
 
-        //TODO: Clean all of this stuff up
+		//TODO: Clean all of this stuff up
 
-        #region Temporary Values
+		#region Temporary Values
 
-        [NotMapped, JsonIgnore] public bool InGame;
+		[NotMapped, JsonIgnore] public bool InGame;
 
         [NotMapped, JsonIgnore] public Guid LastMapEntered = Guid.Empty;
 
diff --git a/Intersect.Server/Networking/PacketHandler.cs b/Intersect.Server/Networking/PacketHandler.cs
index 5814f5e7..38a79662 100644
--- a/Intersect.Server/Networking/PacketHandler.cs
+++ b/Intersect.Server/Networking/PacketHandler.cs
@@ -408,6 +408,7 @@ public void HandlePacket(Client client, Player player, MovePacket packet)
                 return;
             }
 
+			player.Running = packet.Run;
             var canMove = player.CanMove(packet.Dir);
             if ((canMove == -1 || canMove == -4) && client.Entity.MoveRoute == null)
             {
diff --git a/Intersect.Server/Networking/PacketSender.cs b/Intersect.Server/Networking/PacketSender.cs
index 9c1f7b58..869864b4 100644
--- a/Intersect.Server/Networking/PacketSender.cs
+++ b/Intersect.Server/Networking/PacketSender.cs
@@ -441,7 +441,7 @@ public static void SendEntityPositionTo(Client client, Entity en)
             client.SendPacket(
                 new EntityPositionPacket(
                     en.Id, en.GetEntityType(), en.MapId, (byte) en.X, (byte) en.Y, (byte) en.Dir, en.Passable,
-                    en.HideName
+                    en.HideName, en.Running
                 )
             );
         }
@@ -458,7 +458,7 @@ public static void SendEntityPositionToAll(Entity en)
                 en.MapId,
                 new EntityPositionPacket(
                     en.Id, en.GetEntityType(), en.MapId, (byte) en.X, (byte) en.Y, (byte) en.Dir, en.Passable,
-                    en.HideName
+                    en.HideName, en.Running
                 )
             );
         }
@@ -657,7 +657,7 @@ public static void SendEntityMove(Entity en, bool correction = false)
             SendDataToProximity(
                 en.MapId,
                 new EntityMovePacket(
-                    en.Id, en.GetEntityType(), en.MapId, (byte) en.X, (byte) en.Y, (byte) en.Dir, correction
+                    en.Id, en.GetEntityType(), en.MapId, (byte) en.X, (byte) en.Y, (byte) en.Dir, correction, en.Running
                 )
             );
         }
@@ -667,7 +667,7 @@ public static void SendEntityMoveTo(Player player, Entity en, bool correction =
         {
             player.SendPacket(
                 new EntityMovePacket(
-                    en.Id, en.GetEntityType(), en.MapId, (byte) en.X, (byte) en.Y, (byte) en.Dir, correction
+                    en.Id, en.GetEntityType(), en.MapId, (byte) en.X, (byte) en.Y, (byte) en.Dir, correction, en.Running
                 )
             );
         }
-- 
2.24.0.windows.2

